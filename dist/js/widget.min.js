if("undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json"),"undefined"==typeof config)var config={STORAGE_ENV:"prod"};var RiseVision=RiseVision||{};RiseVision.Image={},RiseVision.Image=function(e){"use strict";function t(){var e,t=null;c.className=r.position,c.className=r.scaleToFit?c.className+" scale-to-fit":c.className,document.body.style.background=r.background.color,0===Object.keys(r.storage).length?(e=r.url.split("?"),g=1===e.length?"?":"&",c.style.backgroundImage="url("+r.url+g+"cb="+(new Date).getTime()+")",n(),o()):(d=new RiseVision.Common.Message(document.getElementById("container"),document.getElementById("messageContainer")),d.show("Please wait while your image is downloaded."),t=new RiseVision.Image.Storage(r),t.init(),o())}function i(){d.show("The selected image does not exist.")}function n(){setTimeout(function(){c.style.backgroundImage="url("+r.url+g+"cb="+(new Date).getTime()+")",n()},u)}function s(e,i){Array.isArray(e)&&e.length>0&&"additionalParams"===e[0]&&Array.isArray(i)&&i.length>0&&(r=JSON.parse(i[0]),document.getElementById("container").style.height=l.getInt("rsH")+"px",t())}function o(){e.rpc.call("","rsevent_ready",null,l.getString("id"),!1,!1,!1,!0,!1)}function a(){d.hide()}var r,l=new e.Prefs,c=document.getElementById("image"),g="",d=null,u=3e5;return{getAdditionalParams:s,noStorageFile:i,storageFileUpdate:a}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function i(){try{t.style.height=e.style.height}catch(i){console.warn("Can't initialize Message - ",i.message)}}function n(){if(o){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",o=!1}}function s(i){var n,s=document.createDocumentFragment();o?(n=t.querySelector(".message"),n.innerHTML=i):(e.style.visibility="hidden",t.style.display="block",n=document.createElement("p"),n.innerHTML=i,n.setAttribute("class","message"),n.style.lineHeight=t.style.height,s.appendChild(n),t.appendChild(s),o=!0)}var o=!1;return i(),{hide:n,show:s}};var RiseVision=RiseVision||{};RiseVision.Image=RiseVision.Image||{},RiseVision.Image.Storage=function(e){"use strict";function t(){var t=document.querySelector("rise-storage"),i=document.getElementById("image");t.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(i.style.backgroundImage="url('"+e.detail.url.replace("'","\\'")+"')",RiseVision.Image.storageFileUpdate())}),t.addEventListener("rise-storage-no-file",function(){i.style.background="",RiseVision.Image.noStorageFile()}),t.setAttribute("folder",e.storage.folder),t.setAttribute("fileName",e.storage.fileName),t.setAttribute("companyId",e.storage.companyId),t.setAttribute("env",config.STORAGE_ENV),t.go()}return{init:t}},function(e,t,i){"use strict";var n=(new i.Prefs).getString("id");e.oncontextmenu=function(){return!1},t.body.onmousedown=function(){return!1},e.addEventListener("WebComponentsReady",function(){i.rpc.register("rsparam_set_"+n,RiseVision.Image.getAdditionalParams),i.rpc.call("","rsparam_get",null,n,["additionalParams"])})}(window,document,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-3"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,
