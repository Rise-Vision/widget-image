if("undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json"),"undefined"==typeof config)var config={STORAGE_ENV:"prod"};var RiseVision=RiseVision||{};RiseVision.Image={},RiseVision.Image=function(e){"use strict";function t(){var e,t=null;c.className=m.position,c.className=m.scaleToFit?c.className+" scale-to-fit":c.className,document.body.style.background=m.background.color,0===Object.keys(m.storage).length?(e=m.url.split("?"),p=1===e.length?"?":"&",r(),o()):(d=new RiseVision.Common.Message(document.getElementById("container"),document.getElementById("messageContainer")),d.show("Please wait while your image is downloaded."),t=new RiseVision.Image.Storage(m),t.init(),o())}function n(){d.show("The selected image does not exist.")}function i(){setTimeout(function(){r()},v)}function r(){f=m.url+p+"cb="+(new Date).getTime(),c.style.backgroundImage="url("+f+")",i()}function s(e,n){Array.isArray(e)&&e.length>0&&"additionalParams"===e[0]&&Array.isArray(n)&&n.length>0&&(m=JSON.parse(n[0]),document.getElementById("container").style.height=g.getInt("rsH")+"px",t())}function o(){e.rpc.call("","rsevent_ready",null,g.getString("id"),!0,!1,!1,!0,!1)}function a(){RiseVision.Common.LoggerUtils.logEvent(u(),{event:"play",file_url:f})}function l(e){f=e,d.hide()}function u(){return"image_events"}var g=new e.Prefs,c=document.getElementById("image"),d=null,m=null,f=null,p="",v=3e5;return{getAdditionalParams:s,getTableName:u,noStorageFile:n,play:a,storageFileUpdate:l}}(gadgets);var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORAGE_ENV:"prod",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function n(){try{t.style.height=e.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function i(){if(s){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",s=!1}}function r(n){var i,r=document.createDocumentFragment();s?(i=t.querySelector(".message"),i.innerHTML=n):(e.style.visibility="hidden",t.style.display="block",i=document.createElement("p"),i.innerHTML=n,i.setAttribute("class","message"),r.appendChild(i),t.appendChild(r),s=!0)}var s=!1;return n(),{hide:i,show:r}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(e){"use strict";function t(e,t){Array.isArray(e)&&e.length>0&&Array.isArray(t)&&t.length>0&&("companyId"===e[0]&&(g=t[0]),"displayId"===e[1]&&(u=t[1]?t[1]:"preview"),c(g,u))}function n(e,t){var n=null;e.event?(n=e,n.file_url&&(n.file_format=r(n.file_url)),i(function(e,i){n.company_id=e,n.display_id=i,t(n)})):t(n)}function i(n){n&&"function"==typeof n&&(c=n,g&&u?c(g,u):l&&""!==l&&(e.rpc.register("rsparam_set_"+l,t),e.rpc.call("","rsparam_get",null,l,["companyId","displayId"])))}function r(e){var t,n=/[?#&]/;return e&&"string"==typeof e?(t=e.substr(e.lastIndexOf(".")+1),n.test(t)&&(t=t.substr(0,-1!==t.indexOf("?")?t.indexOf("?"):t.length),t=t.substr(0,-1!==t.indexOf("#")?t.indexOf("#"):t.length),t=t.substr(0,-1!==t.indexOf("&")?t.indexOf("&"):t.length)),t.toLowerCase()):null}function s(e){var t=JSON.parse(JSON.stringify(d));return t.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),t.rows[0].json=JSON.parse(JSON.stringify(e)),t.rows[0].json.ts=(new Date).toISOString(),t}function o(e){var t=new Date,n=t.getUTCFullYear(),i=t.getUTCMonth()+1,r=t.getUTCDate();return 10>i&&(i="0"+i),10>r&&(r="0"+r),e+n+i+r}function a(e,t){n(t,function(t){null!==t&&RiseVision.Common.Logger.log(e,t)})}var l=(new e.Prefs).getString("id"),u="",g="",c=null,d={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,rows:[{insertId:""}]};return{getIds:i,getInsertData:s,getFileFormat:r,getTable:o,logEvent:a}}(gadgets),RiseVision.Common.Logger=function(e){"use strict";function t(e){var t=new XMLHttpRequest;return new Date-u<358e4?e({}):(t.open("POST",r,!0),t.onloadend=function(){var n=JSON.parse(t.response);e({token:n.access_token,refreshedAt:new Date})},t.send(),void 0)}function n(e){return o&&l===e}function i(i,r){function c(t){var n,o,a=new XMLHttpRequest;o=s.replace("TABLE_ID",e.getTable(i)),u=t.refreshedAt||u,g=t.token||g,n=e.getInsertData(r),a.open("POST",o,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+g),r.cb&&"function"==typeof r.cb&&(a.onloadend=function(){r.cb(a.response)}),a.send(JSON.stringify(n))}if(!(!i||!r||r.hasOwnProperty("event")&&!r.event||r.hasOwnProperty("event")&&n(r.event)))return o=!0,l=r.event,setTimeout(function(){o=!1},a),t(c)}var r="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",s="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",o=!1,a=1e3,l="",u=0,g="";return{log:i}}(RiseVision.Common.LoggerUtils);var RiseVision=RiseVision||{};RiseVision.Image=RiseVision.Image||{},RiseVision.Image.Storage=function(e){"use strict";function t(){var t=document.querySelector("rise-storage"),n=document.getElementById("image"),i=RiseVision.Image.getTableName(),r="";t.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(r=e.detail.url.replace("'","\\'"),n.style.backgroundImage="url('"+r+"')",RiseVision.Image.storageFileUpdate(r))}),t.addEventListener("rise-storage-no-file",function(e){var t={event:"error",event_details:"storage file not found",file_url:e.detail};n.style.background="",RiseVision.Common.LoggerUtils.logEvent(i,t),RiseVision.Image.noStorageFile()}),t.addEventListener("rise-storage-file-throttled",function(e){var t={event:"error",event_details:"storage file throttled",file_url:e.detail};RiseVision.Common.LoggerUtils.logEvent(i,t)}),t.addEventListener("rise-storage-error",function(e){var t=e.detail&&e.detail.request&&e.detail.request.url?e.detail.request.url:null,n={event:"error",event_details:"rise storage error",error_details:"The request failed with status code: "+e.detail.error.currentTarget.status,file_url:t};RiseVision.Common.LoggerUtils.logEvent(i,n)}),t.addEventListener("rise-cache-error",function(e){var t=e.detail&&e.detail.request&&e.detail.request.url?e.detail.request.url:null,n={event:"error",event_details:"rise cache error",error_details:"The request failed with status code: "+e.detail.error.currentTarget.status,file_url:t};RiseVision.Common.LoggerUtils.logEvent(i,n)}),t.setAttribute("folder",e.storage.folder),t.setAttribute("fileName",e.storage.fileName),t.setAttribute("companyId",e.storage.companyId),t.setAttribute("env",config.STORAGE_ENV),t.go()}return{init:t}},function(e,t,n){"use strict";function i(){RiseVision.Image.play()}var r=(new n.Prefs).getString("id");e.oncontextmenu=function(){return!1},t.body.onmousedown=function(){return!1},e.addEventListener("WebComponentsReady",function(){r&&""!==r&&(n.rpc.register("rscmd_play_"+r,i),n.rpc.register("rsparam_set_"+r,RiseVision.Image.getAdditionalParams),n.rpc.call("","rsparam_get",null,r,["additionalParams"]))})}(window,document,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-3"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3dpZGdldC5taW4uanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnN0YW50IiwiY29uZmlnIiwiU1RPUkFHRV9FTlYiLCJSaXNlVmlzaW9uIiwiSW1hZ2UiLCJnYWRnZXRzIiwiaW5pdCIsInN0ciIsInN0b3JhZ2UiLCJpbWciLCJjbGFzc05hbWUiLCJwYXJhbXMiLCJwb3NpdGlvbiIsInNjYWxlVG9GaXQiLCJkb2N1bWVudCIsImJvZHkiLCJzdHlsZSIsImJhY2tncm91bmQiLCJjb2xvciIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJ1cmwiLCJzcGxpdCIsInNlcGFyYXRvciIsInNldEJhY2tncm91bmRJbWFnZSIsInJlYWR5IiwibWVzc2FnZSIsIkNvbW1vbiIsIk1lc3NhZ2UiLCJnZXRFbGVtZW50QnlJZCIsInNob3ciLCJTdG9yYWdlIiwibm9TdG9yYWdlRmlsZSIsInN0YXJ0VGltZXIiLCJzZXRUaW1lb3V0IiwicmVmcmVzaEludGVydmFsIiwiZmlsZVVybCIsIkRhdGUiLCJnZXRUaW1lIiwiYmFja2dyb3VuZEltYWdlIiwiZ2V0QWRkaXRpb25hbFBhcmFtcyIsIm5hbWVzIiwidmFsdWVzIiwiQXJyYXkiLCJpc0FycmF5IiwiSlNPTiIsInBhcnNlIiwiaGVpZ2h0IiwicHJlZnMiLCJnZXRJbnQiLCJycGMiLCJjYWxsIiwiZ2V0U3RyaW5nIiwicGxheSIsIkxvZ2dlclV0aWxzIiwibG9nRXZlbnQiLCJnZXRUYWJsZU5hbWUiLCJldmVudCIsImZpbGVfdXJsIiwic3RvcmFnZUZpbGVVcGRhdGUiLCJoaWRlIiwiUHJlZnMiLCJXSURHRVRfQ09NTU9OX0NPTkZJRyIsIkFVVEhfUEFUSF9VUkwiLCJMT0dHRVJfQ0xJRU5UX0lEIiwiTE9HR0VSX0NMSUVOVF9TRUNSRVQiLCJMT0dHRVJfUkVGUkVTSF9UT0tFTiIsIlNUT1JFX1VSTCIsIm1haW5Db250YWluZXIiLCJtZXNzYWdlQ29udGFpbmVyIiwiX2luaXQiLCJlIiwiY29uc29sZSIsIndhcm4iLCJfYWN0aXZlIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiZGlzcGxheSIsInZpc2liaWxpdHkiLCJwIiwiZnJhZ21lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwicXVlcnlTZWxlY3RvciIsImlubmVySFRNTCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsInNldElkcyIsImNvbXBhbnlJZCIsImRpc3BsYXlJZCIsImNhbGxiYWNrIiwiZ2V0RXZlbnRQYXJhbXMiLCJjYiIsImpzb24iLCJmaWxlX2Zvcm1hdCIsImdldEZpbGVGb3JtYXQiLCJnZXRJZHMiLCJjb21wYW55X2lkIiwiZGlzcGxheV9pZCIsImlkIiwicmVnaXN0ZXIiLCJoYXNQYXJhbXMiLCJzdWJzdHIiLCJsYXN0SW5kZXhPZiIsInRlc3QiLCJpbmRleE9mIiwidG9Mb3dlckNhc2UiLCJnZXRJbnNlcnREYXRhIiwiZGF0YSIsInN0cmluZ2lmeSIsIkJBU0VfSU5TRVJUX1NDSEVNQSIsInJvd3MiLCJpbnNlcnRJZCIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIiwidHMiLCJ0b0lTT1N0cmluZyIsImdldFRhYmxlIiwibmFtZSIsImRhdGUiLCJ5ZWFyIiwiZ2V0VVRDRnVsbFllYXIiLCJtb250aCIsImdldFVUQ01vbnRoIiwiZGF5IiwiZ2V0VVRDRGF0ZSIsInRhYmxlIiwiTG9nZ2VyIiwibG9nIiwia2luZCIsInNraXBJbnZhbGlkUm93cyIsImlnbm9yZVVua25vd25WYWx1ZXMiLCJ1dGlscyIsInJlZnJlc2hUb2tlbiIsInhociIsIlhNTEh0dHBSZXF1ZXN0IiwicmVmcmVzaERhdGUiLCJvcGVuIiwiUkVGUkVTSF9VUkwiLCJvbmxvYWRlbmQiLCJyZXNwIiwicmVzcG9uc2UiLCJ0b2tlbiIsImFjY2Vzc190b2tlbiIsInJlZnJlc2hlZEF0Iiwic2VuZCIsImlzVGhyb3R0bGVkIiwidGhyb3R0bGUiLCJsYXN0RXZlbnQiLCJ0YWJsZU5hbWUiLCJpbnNlcnRXaXRoVG9rZW4iLCJyZWZyZXNoRGF0YSIsImluc2VydERhdGEiLCJzZXJ2aWNlVXJsIiwicmVwbGFjZSIsInNldFJlcXVlc3RIZWFkZXIiLCJoYXNPd25Qcm9wZXJ0eSIsInRocm90dGxlRGVsYXkiLCJhZGRFdmVudExpc3RlbmVyIiwiZGV0YWlsIiwiZXZlbnRfZGV0YWlscyIsInJlcXVlc3QiLCJlcnJvcl9kZXRhaWxzIiwiZXJyb3IiLCJjdXJyZW50VGFyZ2V0Iiwic3RhdHVzIiwiZm9sZGVyIiwiZmlsZU5hbWUiLCJnbyIsIndpbmRvdyIsIm9uY29udGV4dG1lbnUiLCJvbm1vdXNlZG93biIsIl9nYXEiLCJwdXNoIiwiZ2EiLCJ0eXBlIiwiYXN5bmMiLCJzcmMiLCJsb2NhdGlvbiIsInByb3RvY29sIiwicyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSJdLCJtYXBwaW5ncyI6IkFBUUEsR0FOdUIsbUJBQVpBLFVBQ1RBLFFBQVFDLE9BQU8sb0NBQ1pDLFNBQVMsaUJBQWtCLHdCQUMzQkEsU0FBUyxnQkFBaUIsU0FHVCxtQkFBWEMsUUFDVCxHQUFJQSxTQUNGQyxZQUFhLE9BTWpCLElBQUlDLFlBQWFBLGNBQ2pCQSxZQUFXQyxTQUVYRCxXQUFXQyxNQUFRLFNBQVdDLEdBQzVCLFlBYUEsU0FBU0MsS0FDUCxHQUNFQyxHQURFQyxFQUFVLElBR2RDLEdBQUlDLFVBQVlDLEVBQU9DLFNBQ3ZCSCxFQUFJQyxVQUFZQyxFQUFPRSxXQUFhSixFQUFJQyxVQUFZLGdCQUFrQkQsRUFBSUMsVUFDMUVJLFNBQVNDLEtBQUtDLE1BQU1DLFdBQWFOLEVBQU9NLFdBQVdDLE1BR1IsSUFBdkNDLE9BQU9DLEtBQUtULEVBQU9ILFNBQVNhLFFBQzlCZCxFQUFNSSxFQUFPVyxJQUFJQyxNQUFNLEtBR3JCQyxFQURpQixJQUFmakIsRUFBSWMsT0FDTSxJQUdBLElBR2RJLElBQ0FDLE1BS0FDLEVBQVUsR0FBSXhCLFlBQVd5QixPQUFPQyxRQUFRZixTQUFTZ0Is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QyxJQUFJa0QsU0FBUyxjQUFnQkQsRUFBSTlDLEdBQ3pDakQsRUFBUThDLElBQUlrRCxTQUFTLGVBQWlCRCxFQUFJakcsV0FBV0MsTUFBTXFDLHFCQUMzRHBDLEVBQVE4QyxJQUFJQyxLQUFLLEdBQUksY0FBZSxLQUFNZ0QsR0FBSyx5QkFPbER3RSxPQUFROUosU0FBVVQsUUFHckIsSUFBSTBLLE1BQU9BLFFBRVhBLE1BQUtDLE1BQU0sY0FBZSxrQkFDMUJELEtBQUtDLE1BQU0sbUJBRVgsV0FDRSxHQUFJQyxHQUFLbkssU0FBU3VFLGNBQWMsU0FBVzRGLEdBQUdDLEtBQU8sa0JBQW1CRCxFQUFHRSxPQUFRLEVBQ25GRixFQUFHRyxLQUFPLFVBQVl0SyxTQUFTdUssU0FBU0MsU0FBVyxjQUFnQixjQUFnQiw2QkFDbkYsSUFBSUMsR0FBSXpLLFNBQVMwSyxxQkFBcUIsVUFBVSxFQUFJRCxHQUFFRSxXQUFXQyxhQUFhVCxFQUFJTSIsImZpbGUiOiJqcy93aWRnZXQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIGNvbmZpZzogdHJ1ZSAqL1xuLyogZXhwb3J0ZWQgY29uZmlnICovXG5pZiAodHlwZW9mIGFuZ3VsYXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLmNvbW1vbi5pMThuLmNvbmZpZ1wiLCBbXSlcbiAgICAuY29uc3RhbnQoXCJMT0NBTEVTX1BSRUZJWFwiLCBcImxvY2FsZXMvdHJhbnNsYXRpb25fXCIpXG4gICAgLmNvbnN0YW50KFwiTE9DQUxFU19TVUZJWFwiLCBcIi5qc29uXCIpO1xufVxuXG5pZiAodHlwZW9mIGNvbmZpZyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICB2YXIgY29uZmlnID0ge1xuICAgIFNUT1JBR0VfRU5WOiBcInByb2RcIlxuICB9O1xufVxuXG4vKiBnbG9iYWwgZ2FkZ2V0cyAqL1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLkltYWdlID0ge307XG5cblJpc2VWaXNpb24uSW1hZ2UgPSAoZnVuY3Rpb24gKGdhZGdldHMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIHByZWZzID0gbmV3IGdhZGdldHMuUHJlZnMoKSxcbiAgICBpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImltYWdlXCIpLFxuICAgIG1lc3NhZ2UgPSBudWxsLFxuICAgIHBhcmFtcyA9IG51bGwsXG4gICAgZmlsZVVybCA9IG51bGwsXG4gICAgc2VwYXJhdG9yID0gXCJcIixcbiAgICByZWZyZXNoSW50ZXJ2YWwgPSAzMDAwMDA7ICAvLyA1IG1pbnV0ZXNcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIHZhciBzdG9yYWdlID0gbnVsbCxcbiAgICAgIHN0cjtcblxuICAgIGltZy5jbGFzc05hbWUgPSBwYXJhbXMucG9zaXRpb247XG4gICAgaW1nLmNsYXNzTmFtZSA9IHBhcmFtcy5zY2FsZVRvRml0ID8gaW1nLmNsYXNzTmFtZSArIFwiIHNjYWxlLXRvLWZpdFwiIDogaW1nLmNsYXNzTmFtZTtcbiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLmJhY2tncm91bmQgPSBwYXJhbXMuYmFja2dyb3VuZC5jb2xvcjtcblxuICAgIC8vIFRoaXJkIHBhcnR5IFVSTFxuICAgIGlmIChPYmplY3Qua2V5cyhwYXJhbXMuc3RvcmFnZSkubGVuZ3RoID09PSAwKSB7XG4gICAgICBzdHIgPSBwYXJhbXMudXJsLnNwbGl0KFwiP1wiKTtcblxuICAgICAgaWYgKHN0ci5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgc2VwYXJhdG9yID0gXCI/XCI7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgc2VwYXJhdG9yID0gXCImXCI7XG4gICAgICB9XG5cbiAgICAgIHNldEJhY2tncm91bmRJbWFnZSgpO1xuICAgICAgcmVhZHkoKTtcbiAgICB9XG4gICAgLy8gUmlzZSBTdG9yYWdlXG4gICAgZWxzZSB7XG4gICAgICAvLyBjcmVhdGUgaW5zdGFuY2Ugb2YgbWVzc2FnZVxuICAgICAgbWVzc2FnZSA9IG5ldyBSaXNlVmlzaW9uLkNvbW1vbi5NZXNzYWdlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGFpbmVyXCIpLFxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lc3NhZ2VDb250YWluZXJcIikpO1xuXG4gICAgICAvLyBzaG93IHdhaXQgbWVzc2FnZSB3aGlsZSBTdG9yYWdlIGluaXRpYWxpemVzXG4gICAgICBtZXNzYWdlLnNob3coXCJQbGVhc2Ugd2FpdCB3aGlsZSB5b3VyIGltYWdlIGlzIGRvd25sb2FkZWQuXCIpO1xuXG4gICAgICBzdG9yYWdlID0gbmV3IFJpc2VWaXNpb24uSW1hZ2UuU3RvcmFnZShwYXJhbXMpO1xuICAgICAgc3RvcmFnZS5pbml0KCk7XG5cbiAgICAgIHJlYWR5KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbm9TdG9yYWdlRmlsZSgpIHtcbiAgICBtZXNzYWdlLnNob3coXCJUaGUgc2VsZWN0ZWQgaW1hZ2UgZG9lcyBub3QgZXhpc3QuXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gc3RhcnRUaW1lcigpIHtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgc2V0QmFja2dyb3VuZEltYWdlKCk7XG4gICAgfSwgcmVmcmVzaEludGVydmFsKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNldEJhY2tncm91bmRJbWFnZSgpIHtcbiAgICBmaWxlVXJsID0gcGFyYW1zLnVybCArIHNlcGFyYXRvciArIFwiY2I9XCIgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICBpbWcuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gXCJ1cmwoXCIgKyBmaWxlVXJsICsgXCIpXCI7XG5cbiAgICBzdGFydFRpbWVyKCk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGdldEFkZGl0aW9uYWxQYXJhbXMobmFtZXMsIHZhbHVlcykge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG5hbWVzKSAmJiBuYW1lcy5sZW5ndGggPiAwICYmIG5hbWVzWzBdID09PSBcImFkZGl0aW9uYWxQYXJhbXNcIikge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSAmJiB2YWx1ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBwYXJhbXMgPSBKU09OLnBhcnNlKHZhbHVlc1swXSk7XG5cbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250YWluZXJcIikuc3R5bGUuaGVpZ2h0ID0gcHJlZnMuZ2V0SW50KFwicnNIXCIpICsgXCJweFwiO1xuICAgICAgICBpbml0KCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVhZHkoKSB7XG4gICAgZ2FkZ2V0cy5ycGMuY2FsbChcIlwiLCBcInJzZXZlbnRfcmVhZHlcIiwgbnVsbCwgcHJlZnMuZ2V0U3RyaW5nKFwiaWRcIiksIHRydWUsXG4gICAgICBmYWxzZSwgZmFsc2UsIHRydWUsIGZhbHNlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXkoKSB7XG4gICAgUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMubG9nRXZlbnQoZ2V0VGFibGVOYW1lKCksIHsgXCJldmVudFwiOiBcInBsYXlcIiwgXCJmaWxlX3VybFwiOiBmaWxlVXJsIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gc3RvcmFnZUZpbGVVcGRhdGUodXJsKSB7XG4gICAgZmlsZVVybCA9IHVybDtcblxuICAgIC8vIHJlbW92ZSBhIG1lc3NhZ2UgcHJldmlvdXNseSBzaG93blxuICAgIG1lc3NhZ2UuaGlkZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0VGFibGVOYW1lKCkge1xuICAgIHJldHVybiBcImltYWdlX2V2ZW50c1wiO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBcImdldEFkZGl0aW9uYWxQYXJhbXNcIjogZ2V0QWRkaXRpb25hbFBhcmFtcyxcbiAgICBcImdldFRhYmxlTmFtZVwiOiBnZXRUYWJsZU5hbWUsXG4gICAgXCJub1N0b3JhZ2VGaWxlXCI6IG5vU3RvcmFnZUZpbGUsXG4gICAgXCJwbGF5XCI6IHBsYXksXG4gICAgXCJzdG9yYWdlRmlsZVVwZGF0ZVwiOiBzdG9yYWdlRmlsZVVwZGF0ZVxuICB9O1xufSkoZ2FkZ2V0cyk7XG5cbnZhciBXSURHRVRfQ09NTU9OX0NPTkZJRyA9IHtcbiAgQVVUSF9QQVRIX1VSTDogXCJ2MS93aWRnZXQvYXV0aFwiLFxuICBMT0dHRVJfQ0xJRU5UX0lEOiBcIjEwODg1MjcxNDcxMDktNnExbzJ2dGlobjM0MjkycGp0NGNraG1oY2swcmswbzcuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb21cIixcbiAgTE9HR0VSX0NMSUVOVF9TRUNSRVQ6IFwibmxaeXJjUExnNm9Fd085ZjlXZm4yOVdoXCIsXG4gIExPR0dFUl9SRUZSRVNIX1RPS0VOOiBcIjEveHp0NGt3ekUxSDdXOVZuS0I4Y0FhQ3g2emI0RXM0bktFb3FhWUhkVEQxNUlnT3JKRHRkdW42eks2WGlBVENLVFwiLFxuICBTVE9SQUdFX0VOVjogXCJwcm9kXCIsXG4gIFNUT1JFX1VSTDogXCJodHRwczovL3N0b3JlLWRvdC1ydmFzZXJ2ZXIyLmFwcHNwb3QuY29tL1wiXG59O1xudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuUmlzZVZpc2lvbi5Db21tb24gPSBSaXNlVmlzaW9uLkNvbW1vbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5Db21tb24uTWVzc2FnZSA9IGZ1bmN0aW9uIChtYWluQ29udGFpbmVyLCBtZXNzYWdlQ29udGFpbmVyKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBfYWN0aXZlID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gX2luaXQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIG1lc3NhZ2VDb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gbWFpbkNvbnRhaW5lci5zdHlsZS5oZWlnaHQ7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS53YXJuKFwiQ2FuJ3QgaW5pdGlhbGl6ZSBNZXNzYWdlIC0gXCIsIGUubWVzc2FnZSk7XG4gICAgfVxuICB9XG5cbiAgLypcbiAgICogIFB1YmxpYyBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBoaWRlKCkge1xuICAgIGlmIChfYWN0aXZlKSB7XG4gICAgICAvLyBjbGVhciBjb250ZW50IG9mIG1lc3NhZ2UgY29udGFpbmVyXG4gICAgICB3aGlsZSAobWVzc2FnZUNvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICAgIG1lc3NhZ2VDb250YWluZXIucmVtb3ZlQ2hpbGQobWVzc2FnZUNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICAgIH1cblxuICAgICAgLy8gaGlkZSBtZXNzYWdlIGNvbnRhaW5lclxuICAgICAgbWVzc2FnZUNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG5cbiAgICAgIC8vIHNob3cgbWFpbiBjb250YWluZXJcbiAgICAgIG1haW5Db250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiO1xuXG4gICAgICBfYWN0aXZlID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2hvdyhtZXNzYWdlKSB7XG4gICAgdmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuICAgICAgcDtcblxuICAgIGlmICghX2FjdGl2ZSkge1xuICAgICAgLy8gaGlkZSBtYWluIGNvbnRhaW5lclxuICAgICAgbWFpbkNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcblxuICAgICAgbWVzc2FnZUNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuXG4gICAgICAvLyBjcmVhdGUgbWVzc2FnZSBlbGVtZW50XG4gICAgICBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICBwLmlubmVySFRNTCA9IG1lc3NhZ2U7XG4gICAgICBwLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibWVzc2FnZVwiKTtcblxuICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQocCk7XG4gICAgICBtZXNzYWdlQ29udGFpbmVyLmFwcGVuZENoaWxkKGZyYWdtZW50KTtcblxuICAgICAgX2FjdGl2ZSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIG1lc3NhZ2UgYWxyZWFkeSBiZWluZyBzaG93biwgdXBkYXRlIG1lc3NhZ2UgdGV4dFxuICAgICAgcCA9IG1lc3NhZ2VDb250YWluZXIucXVlcnlTZWxlY3RvcihcIi5tZXNzYWdlXCIpO1xuICAgICAgcC5pbm5lckhUTUwgPSBtZXNzYWdlO1xuICAgIH1cbiAgfVxuXG4gIF9pbml0KCk7XG5cbiAgcmV0dXJuIHtcbiAgICBcImhpZGVcIjogaGlkZSxcbiAgICBcInNob3dcIjogc2hvd1xuICB9O1xufTtcblxuLyogZ2xvYmFsIGdhZGdldHMgKi9cblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuUmlzZVZpc2lvbi5Db21tb24gPSBSaXNlVmlzaW9uLkNvbW1vbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMgPSAoZnVuY3Rpb24oZ2FkZ2V0cykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICAgdmFyIGlkID0gbmV3IGdhZGdldHMuUHJlZnMoKS5nZXRTdHJpbmcoXCJpZFwiKSxcbiAgICBkaXNwbGF5SWQgPSBcIlwiLFxuICAgIGNvbXBhbnlJZCA9IFwiXCIsXG4gICAgY2FsbGJhY2sgPSBudWxsO1xuXG4gIHZhciBCQVNFX0lOU0VSVF9TQ0hFTUEgPVxuICB7XG4gICAgXCJraW5kXCI6IFwiYmlncXVlcnkjdGFibGVEYXRhSW5zZXJ0QWxsUmVxdWVzdFwiLFxuICAgIFwic2tpcEludmFsaWRSb3dzXCI6IGZhbHNlLFxuICAgIFwiaWdub3JlVW5rbm93blZhbHVlc1wiOiBmYWxzZSxcbiAgICBcInJvd3NcIjogW3tcbiAgICAgIFwiaW5zZXJ0SWRcIjogXCJcIlxuICAgIH1dXG4gIH07XG5cbiAgLypcbiAgICogIFByaXZhdGUgTWV0aG9kc1xuICAgKi9cblxuICAvKiBTZXQgdGhlIENvbXBhbnkgYW5kIERpc3BsYXkgSURzLiAqL1xuICBmdW5jdGlvbiBzZXRJZHMobmFtZXMsIHZhbHVlcykge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG5hbWVzKSAmJiBuYW1lcy5sZW5ndGggPiAwKSB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZXMpICYmIHZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGlmIChuYW1lc1swXSA9PT0gXCJjb21wYW55SWRcIikge1xuICAgICAgICAgIGNvbXBhbnlJZCA9IHZhbHVlc1swXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuYW1lc1sxXSA9PT0gXCJkaXNwbGF5SWRcIikge1xuICAgICAgICAgIGlmICh2YWx1ZXNbMV0pIHtcbiAgICAgICAgICAgIGRpc3BsYXlJZCA9IHZhbHVlc1sxXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkaXNwbGF5SWQgPSBcInByZXZpZXdcIjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjYWxsYmFjayhjb21wYW55SWQsIGRpc3BsYXlJZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyogUmV0cmlldmUgcGFyYW1ldGVycyB0byBwYXNzIHRvIHRoZSBldmVudCBsb2dnZXIuICovXG4gIGZ1bmN0aW9uIGdldEV2ZW50UGFyYW1zKHBhcmFtcywgY2IpIHtcbiAgICB2YXIganNvbiA9IG51bGw7XG5cbiAgICAvLyBldmVudCBpcyByZXF1aXJlZC5cbiAgICBpZiAocGFyYW1zLmV2ZW50KSB7XG4gICAgICBqc29uID0gcGFyYW1zO1xuXG4gICAgICBpZiAoanNvbi5maWxlX3VybCkge1xuICAgICAgICBqc29uLmZpbGVfZm9ybWF0ID0gZ2V0RmlsZUZvcm1hdChqc29uLmZpbGVfdXJsKTtcbiAgICAgIH1cblxuICAgICAgZ2V0SWRzKGZ1bmN0aW9uKGNvbXBhbnlJZCwgZGlzcGxheUlkKSB7XG4gICAgICAgIGpzb24uY29tcGFueV9pZCA9IGNvbXBhbnlJZDtcbiAgICAgICAganNvbi5kaXNwbGF5X2lkID0gZGlzcGxheUlkO1xuXG4gICAgICAgIGNiKGpzb24pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgY2IoanNvbik7XG4gICAgfVxuICB9XG5cbiAgLypcbiAgICogIFB1YmxpYyBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBnZXRJZHMoY2IpIHtcbiAgICBpZiAoIWNiIHx8IHR5cGVvZiBjYiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgY2FsbGJhY2sgPSBjYjtcbiAgICB9XG5cbiAgICBpZiAoY29tcGFueUlkICYmIGRpc3BsYXlJZCkge1xuICAgICAgY2FsbGJhY2soY29tcGFueUlkLCBkaXNwbGF5SWQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGlmIChpZCAmJiBpZCAhPT0gXCJcIikge1xuICAgICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlcihcInJzcGFyYW1fc2V0X1wiICsgaWQsIHNldElkcyk7XG4gICAgICAgIGdhZGdldHMucnBjLmNhbGwoXCJcIiwgXCJyc3BhcmFtX2dldFwiLCBudWxsLCBpZCwgW1wiY29tcGFueUlkXCIsIFwiZGlzcGxheUlkXCJdKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRGaWxlRm9ybWF0KHVybCkge1xuICAgIHZhciBoYXNQYXJhbXMgPSAvWz8jJl0vLFxuICAgICAgc3RyO1xuXG4gICAgaWYgKCF1cmwgfHwgdHlwZW9mIHVybCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgc3RyID0gdXJsLnN1YnN0cih1cmwubGFzdEluZGV4T2YoXCIuXCIpICsgMSk7XG5cbiAgICAvLyBkb24ndCBpbmNsdWRlIGFueSBwYXJhbXMgYWZ0ZXIgdGhlIGZpbGVuYW1lXG4gICAgaWYgKGhhc1BhcmFtcy50ZXN0KHN0cikpIHtcbiAgICAgIHN0ciA9IHN0ci5zdWJzdHIoMCAsKHN0ci5pbmRleE9mKFwiP1wiKSAhPT0gLTEpID8gc3RyLmluZGV4T2YoXCI/XCIpIDogc3RyLmxlbmd0aCk7XG5cbiAgICAgIHN0ciA9IHN0ci5zdWJzdHIoMCwgKHN0ci5pbmRleE9mKFwiI1wiKSAhPT0gLTEpID8gc3RyLmluZGV4T2YoXCIjXCIpIDogc3RyLmxlbmd0aCk7XG5cbiAgICAgIHN0ciA9IHN0ci5zdWJzdHIoMCwgKHN0ci5pbmRleE9mKFwiJlwiKSAhPT0gLTEpID8gc3RyLmluZGV4T2YoXCImXCIpIDogc3RyLmxlbmd0aCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0ci50b0xvd2VyQ2FzZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SW5zZXJ0RGF0YShwYXJhbXMpIHtcbiAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoQkFTRV9JTlNFUlRfU0NIRU1BKSk7XG5cbiAgICBkYXRhLnJvd3NbMF0uaW5zZXJ0SWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMikudG9VcHBlckNhc2UoKTtcbiAgICBkYXRhLnJvd3NbMF0uanNvbiA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocGFyYW1zKSk7XG4gICAgZGF0YS5yb3dzWzBdLmpzb24udHMgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFRhYmxlKG5hbWUpIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCksXG4gICAgICB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpLFxuICAgICAgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCkgKyAxLFxuICAgICAgZGF5ID0gZGF0ZS5nZXRVVENEYXRlKCk7XG5cbiAgICBpZiAobW9udGggPCAxMCkge1xuICAgICAgbW9udGggPSBcIjBcIiArIG1vbnRoO1xuICAgIH1cblxuICAgIGlmIChkYXkgPCAxMCkge1xuICAgICAgZGF5ID0gXCIwXCIgKyBkYXk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5hbWUgKyB5ZWFyICsgbW9udGggKyBkYXk7XG4gIH1cblxuICBmdW5jdGlvbiBsb2dFdmVudCh0YWJsZSwgcGFyYW1zKSB7XG4gICAgZ2V0RXZlbnRQYXJhbXMocGFyYW1zLCBmdW5jdGlvbihqc29uKSB7XG4gICAgICBpZiAoanNvbiAhPT0gbnVsbCkge1xuICAgICAgICBSaXNlVmlzaW9uLkNvbW1vbi5Mb2dnZXIubG9nKHRhYmxlLCBqc29uKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgXCJnZXRJZHNcIjogZ2V0SWRzLFxuICAgIFwiZ2V0SW5zZXJ0RGF0YVwiOiBnZXRJbnNlcnREYXRhLFxuICAgIFwiZ2V0RmlsZUZvcm1hdFwiOiBnZXRGaWxlRm9ybWF0LFxuICAgIFwiZ2V0VGFibGVcIjogZ2V0VGFibGUsXG4gICAgXCJsb2dFdmVudFwiOiBsb2dFdmVudFxuICB9O1xufSkoZ2FkZ2V0cyk7XG5cblJpc2VWaXNpb24uQ29tbW9uLkxvZ2dlciA9IChmdW5jdGlvbih1dGlscykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgUkVGUkVTSF9VUkwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92My90b2tlbj9jbGllbnRfaWQ9XCIgKyBXSURHRVRfQ09NTU9OX0NPTkZJRy5MT0dHRVJfQ0xJRU5UX0lEICtcbiAgICAgIFwiJmNsaWVudF9zZWNyZXQ9XCIgKyBXSURHRVRfQ09NTU9OX0NPTkZJRy5MT0dHRVJfQ0xJRU5UX1NFQ1JFVCArXG4gICAgICBcIiZyZWZyZXNoX3Rva2VuPVwiICsgV0lER0VUX0NPTU1PTl9DT05GSUcuTE9HR0VSX1JFRlJFU0hfVE9LRU4gK1xuICAgICAgXCImZ3JhbnRfdHlwZT1yZWZyZXNoX3Rva2VuXCI7XG5cbiAgdmFyIHNlcnZpY2VVcmwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2JpZ3F1ZXJ5L3YyL3Byb2plY3RzL2NsaWVudC1zaWRlLWV2ZW50cy9kYXRhc2V0cy9XaWRnZXRfRXZlbnRzL3RhYmxlcy9UQUJMRV9JRC9pbnNlcnRBbGxcIixcbiAgICB0aHJvdHRsZSA9IGZhbHNlLFxuICAgIHRocm90dGxlRGVsYXkgPSAxMDAwLFxuICAgIGxhc3RFdmVudCA9IFwiXCIsXG4gICAgcmVmcmVzaERhdGUgPSAwLFxuICAgIHRva2VuID0gXCJcIjtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiByZWZyZXNoVG9rZW4oY2IpIHtcbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICBpZiAobmV3IERhdGUoKSAtIHJlZnJlc2hEYXRlIDwgMzU4MDAwMCkge1xuICAgICAgcmV0dXJuIGNiKHt9KTtcbiAgICB9XG5cbiAgICB4aHIub3BlbihcIlBPU1RcIiwgUkVGUkVTSF9VUkwsIHRydWUpO1xuICAgIHhoci5vbmxvYWRlbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByZXNwID0gSlNPTi5wYXJzZSh4aHIucmVzcG9uc2UpO1xuXG4gICAgICBjYih7IHRva2VuOiByZXNwLmFjY2Vzc190b2tlbiwgcmVmcmVzaGVkQXQ6IG5ldyBEYXRlKCkgfSk7XG4gICAgfTtcblxuICAgIHhoci5zZW5kKCk7XG4gIH1cblxuICBmdW5jdGlvbiBpc1Rocm90dGxlZChldmVudCkge1xuICAgIHJldHVybiB0aHJvdHRsZSAmJiAobGFzdEV2ZW50ID09PSBldmVudCk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGxvZyh0YWJsZU5hbWUsIHBhcmFtcykge1xuICAgIGlmICghdGFibGVOYW1lIHx8ICFwYXJhbXMgfHwgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eShcImV2ZW50XCIpICYmICFwYXJhbXMuZXZlbnQpIHx8XG4gICAgICAocGFyYW1zLmhhc093blByb3BlcnR5KFwiZXZlbnRcIikgJiYgaXNUaHJvdHRsZWQocGFyYW1zLmV2ZW50KSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aHJvdHRsZSA9IHRydWU7XG4gICAgbGFzdEV2ZW50ID0gcGFyYW1zLmV2ZW50O1xuXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICB0aHJvdHRsZSA9IGZhbHNlO1xuICAgIH0sIHRocm90dGxlRGVsYXkpO1xuXG4gICAgZnVuY3Rpb24gaW5zZXJ0V2l0aFRva2VuKHJlZnJlc2hEYXRhKSB7XG4gICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCksXG4gICAgICAgIGluc2VydERhdGEsIHVybDtcblxuICAgICAgdXJsID0gc2VydmljZVVybC5yZXBsYWNlKFwiVEFCTEVfSURcIiwgdXRpbHMuZ2V0VGFibGUodGFibGVOYW1lKSk7XG4gICAgICByZWZyZXNoRGF0ZSA9IHJlZnJlc2hEYXRhLnJlZnJlc2hlZEF0IHx8IHJlZnJlc2hEYXRlO1xuICAgICAgdG9rZW4gPSByZWZyZXNoRGF0YS50b2tlbiB8fCB0b2tlbjtcbiAgICAgIGluc2VydERhdGEgPSB1dGlscy5nZXRJbnNlcnREYXRhKHBhcmFtcyk7XG5cbiAgICAgIC8vIEluc2VydCB0aGUgZGF0YS5cbiAgICAgIHhoci5vcGVuKFwiUE9TVFwiLCB1cmwsIHRydWUpO1xuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJBdXRob3JpemF0aW9uXCIsIFwiQmVhcmVyIFwiICsgdG9rZW4pO1xuXG4gICAgICBpZiAocGFyYW1zLmNiICYmIHR5cGVvZiBwYXJhbXMuY2IgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICB4aHIub25sb2FkZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcGFyYW1zLmNiKHhoci5yZXNwb25zZSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHhoci5zZW5kKEpTT04uc3RyaW5naWZ5KGluc2VydERhdGEpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVmcmVzaFRva2VuKGluc2VydFdpdGhUb2tlbik7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwibG9nXCI6IGxvZ1xuICB9O1xufSkoUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMpO1xuLyogZ2xvYmFsIGNvbmZpZyAqL1xudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuUmlzZVZpc2lvbi5JbWFnZSA9IFJpc2VWaXNpb24uSW1hZ2UgfHwge307XG5cblJpc2VWaXNpb24uSW1hZ2UuU3RvcmFnZSA9IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgLypcbiAgICogIFB1YmxpYyBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIHZhciBzdG9yYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInJpc2Utc3RvcmFnZVwiKSxcbiAgICAgIGltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW1hZ2VcIiksXG4gICAgICB0YWJsZSA9IFJpc2VWaXNpb24uSW1hZ2UuZ2V0VGFibGVOYW1lKCksXG4gICAgICB1cmwgPSBcIlwiO1xuXG4gICAgc3RvcmFnZS5hZGRFdmVudExpc3RlbmVyKFwicmlzZS1zdG9yYWdlLXJlc3BvbnNlXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGlmIChlLmRldGFpbCAmJiBlLmRldGFpbC51cmwpIHtcbiAgICAgICAgLy8gRXNjYXBlIHNpbmdsZSBxdW90ZXMuXG4gICAgICAgIHVybCA9IGUuZGV0YWlsLnVybC5yZXBsYWNlKFwiJ1wiLCBcIlxcXFwnXCIpO1xuICAgICAgICBpbWcuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gXCJ1cmwoJ1wiICsgdXJsICsgXCInKVwiO1xuXG4gICAgICAgIFJpc2VWaXNpb24uSW1hZ2Uuc3RvcmFnZUZpbGVVcGRhdGUodXJsKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHN0b3JhZ2UuYWRkRXZlbnRMaXN0ZW5lcihcInJpc2Utc3RvcmFnZS1uby1maWxlXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciBwYXJhbXMgPSB7XG4gICAgICAgIFwiZXZlbnRcIjogXCJlcnJvclwiLFxuICAgICAgICBcImV2ZW50X2RldGFpbHNcIjogXCJzdG9yYWdlIGZpbGUgbm90IGZvdW5kXCIsXG4gICAgICAgIFwiZmlsZV91cmxcIjogZS5kZXRhaWxcbiAgICAgIH07XG5cbiAgICAgIC8vIGNsZWFyIHRoZSBleGlzdGluZyBpbWFnZVxuICAgICAgaW1nLnN0eWxlLmJhY2tncm91bmQgPSBcIlwiO1xuXG4gICAgICBSaXNlVmlzaW9uLkNvbW1vbi5Mb2dnZXJVdGlscy5sb2dFdmVudCh0YWJsZSwgcGFyYW1zKTtcbiAgICAgIFJpc2VWaXNpb24uSW1hZ2Uubm9TdG9yYWdlRmlsZSgpO1xuICAgIH0pO1xuXG4gICAgc3RvcmFnZS5hZGRFdmVudExpc3RlbmVyKFwicmlzZS1zdG9yYWdlLWZpbGUtdGhyb3R0bGVkXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciBwYXJhbXMgPSB7XG4gICAgICAgIFwiZXZlbnRcIjogXCJlcnJvclwiLFxuICAgICAgICBcImV2ZW50X2RldGFpbHNcIjogXCJzdG9yYWdlIGZpbGUgdGhyb3R0bGVkXCIsXG4gICAgICAgIFwiZmlsZV91cmxcIjogZS5kZXRhaWxcbiAgICAgIH07XG5cbiAgICAgIFJpc2VWaXNpb24uQ29tbW9uLkxvZ2dlclV0aWxzLmxvZ0V2ZW50KHRhYmxlLCBwYXJhbXMpO1xuICAgIH0pO1xuXG4gICAgc3RvcmFnZS5hZGRFdmVudExpc3RlbmVyKFwicmlzZS1zdG9yYWdlLWVycm9yXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciBmaWxlVXJsID0gKGUuZGV0YWlsICYmIGUuZGV0YWlsLnJlcXVlc3QgJiYgZS5kZXRhaWwucmVxdWVzdC51cmwpID8gZS5kZXRhaWwucmVxdWVzdC51cmwgOiBudWxsLFxuICAgICAgICBwYXJhbXMgPSB7XG4gICAgICAgICAgXCJldmVudFwiOiBcImVycm9yXCIsXG4gICAgICAgICAgXCJldmVudF9kZXRhaWxzXCI6IFwicmlzZSBzdG9yYWdlIGVycm9yXCIsXG4gICAgICAgICAgXCJlcnJvcl9kZXRhaWxzXCI6IFwiVGhlIHJlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGU6IFwiICsgZS5kZXRhaWwuZXJyb3IuY3VycmVudFRhcmdldC5zdGF0dXMsXG4gICAgICAgICAgXCJmaWxlX3VybFwiOiBmaWxlVXJsXG4gICAgICAgIH07XG5cbiAgICAgIFJpc2VWaXNpb24uQ29tbW9uLkxvZ2dlclV0aWxzLmxvZ0V2ZW50KHRhYmxlLCBwYXJhbXMpO1xuICAgIH0pO1xuXG4gICAgc3RvcmFnZS5hZGRFdmVudExpc3RlbmVyKFwicmlzZS1jYWNoZS1lcnJvclwiLCBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgZmlsZVVybCA9IChlLmRldGFpbCAmJiBlLmRldGFpbC5yZXF1ZXN0ICYmIGUuZGV0YWlsLnJlcXVlc3QudXJsKSA/IGUuZGV0YWlsLnJlcXVlc3QudXJsIDogbnVsbCxcbiAgICAgICAgcGFyYW1zID0ge1xuICAgICAgICAgIFwiZXZlbnRcIjogXCJlcnJvclwiLFxuICAgICAgICAgIFwiZXZlbnRfZGV0YWlsc1wiOiBcInJpc2UgY2FjaGUgZXJyb3JcIixcbiAgICAgICAgICBcImVycm9yX2RldGFpbHNcIjogXCJUaGUgcmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZTogXCIgKyBlLmRldGFpbC5lcnJvci5jdXJyZW50VGFyZ2V0LnN0YXR1cyxcbiAgICAgICAgICBcImZpbGVfdXJsXCI6IGZpbGVVcmxcbiAgICAgICAgfTtcblxuICAgICAgUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMubG9nRXZlbnQodGFibGUsIHBhcmFtcyk7XG4gICAgfSk7XG5cbiAgICBzdG9yYWdlLnNldEF0dHJpYnV0ZShcImZvbGRlclwiLCBwYXJhbXMuc3RvcmFnZS5mb2xkZXIpO1xuICAgIHN0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiZmlsZU5hbWVcIiwgcGFyYW1zLnN0b3JhZ2UuZmlsZU5hbWUpO1xuICAgIHN0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiY29tcGFueUlkXCIsIHBhcmFtcy5zdG9yYWdlLmNvbXBhbnlJZCk7XG4gICAgc3RvcmFnZS5zZXRBdHRyaWJ1dGUoXCJlbnZcIiwgY29uZmlnLlNUT1JBR0VfRU5WKTtcbiAgICBzdG9yYWdlLmdvKCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwiaW5pdFwiOiBpbml0XG4gIH07XG59O1xuXG4vKiBnbG9iYWwgUmlzZVZpc2lvbiwgZ2FkZ2V0cyAqL1xuKGZ1bmN0aW9uICh3aW5kb3csIGRvY3VtZW50LCBnYWRnZXRzKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBpZCA9IG5ldyBnYWRnZXRzLlByZWZzKCkuZ2V0U3RyaW5nKFwiaWRcIik7XG5cbiAgd2luZG93Lm9uY29udGV4dG1lbnUgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIGRvY3VtZW50LmJvZHkub25tb3VzZWRvd24gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJXZWJDb21wb25lbnRzUmVhZHlcIiwgZnVuY3Rpb24oKSB7XG4gICAgaWYgKGlkICYmIGlkICE9PSBcIlwiKSB7XG4gICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlcihcInJzY21kX3BsYXlfXCIgKyBpZCwgcGxheSk7XG4gICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlcihcInJzcGFyYW1fc2V0X1wiICsgaWQsIFJpc2VWaXNpb24uSW1hZ2UuZ2V0QWRkaXRpb25hbFBhcmFtcyk7XG4gICAgICBnYWRnZXRzLnJwYy5jYWxsKFwiXCIsIFwicnNwYXJhbV9nZXRcIiwgbnVsbCwgaWQsIFtcImFkZGl0aW9uYWxQYXJhbXNcIl0pO1xuICAgIH1cbiAgfSk7XG5cbiAgZnVuY3Rpb24gcGxheSgpIHtcbiAgICBSaXNlVmlzaW9uLkltYWdlLnBsYXkoKTtcbiAgfVxufSkod2luZG93LCBkb2N1bWVudCwgZ2FkZ2V0cyk7XG5cbi8qIGpzaGludCBpZ25vcmU6c3RhcnQgKi9cbnZhciBfZ2FxID0gX2dhcSB8fCBbXTtcblxuX2dhcS5wdXNoKFsnX3NldEFjY291bnQnLCAnVUEtNTcwOTIxNTktMyddKTtcbl9nYXEucHVzaChbJ190cmFja1BhZ2V2aWV3J10pO1xuXG4oZnVuY3Rpb24oKSB7XG4gIHZhciBnYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOyBnYS50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7IGdhLmFzeW5jID0gdHJ1ZTtcbiAgZ2Euc3JjID0gKCdodHRwczonID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sID8gJ2h0dHBzOi8vc3NsJyA6ICdodHRwOi8vd3d3JykgKyAnLmdvb2dsZS1hbmFseXRpY3MuY29tL2dhLmpzJztcbiAgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07IHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZ2EsIHMpO1xufSkoKTtcbi8qIGpzaGludCBpZ25vcmU6ZW5kICovXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
